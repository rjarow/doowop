#!/usr/bin/env ansible-playbook
---

- hosts: doowop
  become: yes

  vars:
    mysql_user: wordpress
    mysql_db: wordpress

  vars_prompt:
    - name: domain
      prompt: What is the TLD You would like to setup? (ie mydomain.com)
      private: no

    - name: email
      prompt: What is the email to send letsencrypt (ssl) emails for this domain?
      private: no


  tasks:

    - name: Generate some passwords
      shell:  openssl rand -base64 12
      register: mysql_root_pass

    - name: Generate more passwords
      shell:  openssl rand -base64 12
      register: mysql_user_pass

    - name: Get UID of {{ docker_user }}
      shell: id -u "{{ docker_user }}"
      register: docker_user_id

    - name: Create website folder structure
      file:
        path: "{{ sitedir }}/{{ domain }}"
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: 0775
        state: directory
        recurse: yes

    - name: Create website folder structure
      file:
        path: "{{ sitedir }}/{{ domain }}/{{ item }}"
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: 0775
        state: directory
        recurse: yes
      with_items:
        - db
        - web
        - backup

    - name: Create DB for {{ domain }}
      docker_container:
        name: "{{ domain }}_db"
        image: "{{ dockerdb }}"
        state: started
        restart_policy: unless-stopped
        volumes:
          - "{{ sitedir }}/{{ domain }}/db:/var/lib/mysql"
        purge_networks: yes
        networks:
          - name: "{{ docker_network_name }}"
        env:
          PUID: "{{ docker_user_id.stdout }}"
          PGID: "{{ docker_user_id.stdout }}"
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_pass.stdout }}"
          MYSQL_DATABASE: "{{ mysql_db }}"
          MYSQL_USER: "{{ mysql_user }}"
          MYSQL_PASSWORD: "{{ mysql_user_pass.stdout }}"

    - name: Create Wordpress for {{ domain }}
      docker_container:
        name: "{{ domain }}_wp"
        image: "{{ dockerwp }}"
        state: started
        restart_policy: unless-stopped
        volumes:
          - "{{ sitedir }}/{{ domain }}/web:/usr/html"
          - "{{ sitedir }}/{{ domain }}/backup:/usr/backup"
        purge_networks: yes
        networks:
          - name: "{{ docker_network_name }}"
        env:
          PUID: "{{ docker_user_id.stdout }}"
          PGID: "{{ docker_user_id.stdout }}"
          WORDPRESS_DB_HOST: "{{ domain }}_db"
          WORDPRESS_DB: "{{ mysql_db }}"
          WORDPRESS_DB_USER: "{{ mysql_user }}"
          WORDPRESS_DB_PASSWORD: "{{ mysql_user_pass.stdout }}"
          VIRTUAL_HOST: "{{ domain }}, www.{{ domain }}"
          LETSENCRYPT_HOST: "{{ domain }}, www.{{ domain }}"
          LETSENCRYPT_EMAIL: "{{ email }}"

    - name: Exporting variables to text file
      shell: |
        echo '============================================
        Created on: {{ ansible_date_time.date }}
        MYSQL ROOT PASS: {{ mysql_root_pass.stdout }}
        MYSQL USER: {{ mysql_user }}
        MYSQL PASSWORD: {{ mysql_user_pass.stdout }}
        MYSQL DATABASE: {{ mysql_db }}
        ============================================
          ' >> {{ configdir }}/{{ domain }}.txt

    - name: Permissions
      file:
        path: "{{ configdir }}/{{ domain }}.txt"
        owner: root
        group: root
        mode: 0600

    - name: Variable Information
      debug:
        msg: "{{ domain }}_db -- MYSQL ROOT PASS: {{ mysql_root_pass.stdout }}  MYSQL_USER: {{ mysql_user }}  MYSQL_PASSWORD: {{ mysql_user_pass.stdout }} -- Writing to >> {{ configdir }}/{{ domain }}.txt"

    - name: Finished!
      debug:
        msg: "Please visit https://{{ domain }} and finish your wordpress setup!"